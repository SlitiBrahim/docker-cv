stages:
  - test
  - build
  - deploy

services:
  - docker:dind

variables:
  CI_IMAGE_FULL_NAME: "$CI_REPO:$CI_COMMIT_SHORT_SHA"

test:
  stage: test
  image: busybox
  script:
    - echo "check if $CV_FILENAME is present in the repository"
    - test -f $CV_FILENAME || echo "$CV_FILENAME is not present ‚ùå"

build-image:
  stage: build
  image: docker:latest
  variables:
    CI_PUSH_IMAGE_ROOT_PATH: "$CI_REGISTRY/$CI_REPO"
  before_script:
    - echo $CI_REGISTRY_PASSWORD |
      docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build -t "$CI_PUSH_IMAGE_ROOT_PATH:$CI_COMMIT_SHORT_SHA"
      -t "$CI_PUSH_IMAGE_ROOT_PATH:latest" .
    - docker push $CI_PUSH_IMAGE_ROOT_PATH:$CI_COMMIT_SHORT_SHA
    - docker push "$CI_PUSH_IMAGE_ROOT_PATH:latest"
  after_script:
    - echo "Docker image pushed at ${CI_IMAGE_FULL_NAME} üîÑ üê≥"
  only:
    - master

deploy:
  stage: deploy
  image: python:3
  variables:
    GITLAB_SSH_KEY_FILE: "gitlab_key"
  before_script:
    - echo "$GITLAB_SSH_KEY" > "$GITLAB_SSH_KEY_FILE"
    - chmod 600 $GITLAB_SSH_KEY_FILE # ansible won't use key if more than read+write permissions
    - pip3 install ansible
  script:
    - ansible-playbook -i ansible/hosts ansible/playbook.yaml
      --extra-vars "image_id=$CI_IMAGE_FULL_NAME gitlab_ssh_key=$GITLAB_SSH_KEY_FILE"
  after_script:
    - echo "Image updated on kubernetes cluster and now set to ${CI_IMAGE_FULL_NAME} ‚úÖ üê≥"
  only:
    - master